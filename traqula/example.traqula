/*  
    Traqula is a declarative language, but also instructive, in that 
    queries will be executed according to the order of the operations
    as they are specified. It is based on conditional searches, with 
    variables binding the results together.
*/

add role  wife, husband, name, age, address, epithet;

add posit +p1 [{(+idw, wife), (+idh, husband)}, "married", '2004-06-19'],
          +p1 [{(idh, name)}, "Lars Samuelsson",      '1972-08-20'], /* A name I used to go by */
          +p1 [{(idh, address)}, { "street": "The Road of Karlberg", "postal code": 11335, "care_of": { "name": "Lars Roenbaeck", "apartment": 1501 } }, '2007-09-01'],
          +p1 [{(idh, age)}, 30.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214, '2003-02-20'],
          +p2 [{(idh, epithet)}, "/* liker of comments */, ], and  ""spaces""", @BOT];

add role  birth date;

add posit [{(idw, name)}, "Anneli",    '1972-02-13'],
          [{(idw, age)}, 30, '2002-02-13'], 
          [{(idw, birth date)}, '1972-02-13', '1972-02-13'];

add posit +p1 [{(idh, name)}, "Lars Roenbaeck", '2004-07-01'];  
add posit [{(p1, posit), (idh, ascertains)}, 100%, @NOW], 
          [{(p2, posit), (idh, ascertains)}, -100%, @NOW];

add posit [{(idw, name)}, 42, '2030-12-01'];  

/* From all married couples, that have been ascertained, give me the name values of the wives and 
   the time since when they had that name */
search +p [{(+w, wife), (*, husband)}, "married", *], 
          [{(p, posit), (*, ascertains)}, *, *], 
          [{(w, name)}, +n, +t]
return
    n, t;

/* For everything that has a name, give me all name values that became valid on 1972-02-13 */
search [{(*, name)}, +n, '1972-02-13']
return
    n;

/* For everything that has a name, give me all name values that were valid on or before 1999-12-31 */
search [{(*, name)}, +n, +t]
where t <= '1999-12-31'
return
    n;

/* Marriage asserted and name for either spouse (union) */
search +p [{(+w, wife), (+h, husband)}, "married", *],
          [{(p, posit), (*, ascertains)}, *, *],
          [{(w|h, name)}, +n, +t]
where t < '2004-07-01'
return
    n, t;

search +pos [{(+w, wife), (+h, husband)}, "married", *],
          [{(pos, husband), (*, wife)}, *, *],
          [{(w|h, name)}, +n, +t]
where t < '2004-07-01'
return
    n, t;

search +p [{(*, wife), (+h, husband)}, "married", *], 
          [{(p, posit), (*, ascertains)}, +c, +at], 
          [{(h, name)}, +n, +t]
return
    n, t, c, at;

/* Testing error handling: missing quotes around date */
/*
search [{(*, name)}, +n, 1972-02-13] # missing quotes
return
    n;
*/
